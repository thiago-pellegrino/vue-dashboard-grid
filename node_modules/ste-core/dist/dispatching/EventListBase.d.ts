/**
 * Base class for event lists classes. Implements the get and remove.
 *
 * @export
 * @abstract
 * @class EventListBaset
 * @template TEventDispatcher The type of event dispatcher.
 */
export declare abstract class EventListBase<TEventDispatcher> {
    private _events;
    /**
     * Gets the dispatcher associated with the name.
     *
     * @param {string} name The name of the event.
     * @returns {TEventDispatcher} The disptacher.
     *
     * @memberOf EventListBase
     */
    get(name: string): TEventDispatcher;
    /**
     * Removes the dispatcher associated with the name.
     *
     * @param {string} name
     *
     * @memberOf EventListBase
     */
    remove(name: string): void;
    /**
     * Creates a new dispatcher instance.
     *
     * @protected
     * @abstract
     * @returns {TEventDispatcher}
     *
     * @memberOf EventListBase
     */
    protected abstract createDispatcher(): TEventDispatcher;
}
