{
	"version": 3,
	"sources": [
		"browser.ts"
	],
	"names": [
		"domObjects",
		"is",
		"browser",
		"init",
		"window",
		"Element",
		"navigator",
		"supportsTouch",
		"func",
		"DocumentTouch",
		"document",
		"supportsPointerEvent",
		"pointerEnabled",
		"PointerEvent",
		"isIOS",
		"test",
		"platform",
		"isIOS7",
		"appVersion",
		"isIe9",
		"userAgent",
		"isOperaMobile",
		"appName",
		"prefixedMatchesSelector",
		"prototype",
		"pEventTypes",
		"MSPointerEvent",
		"up",
		"down",
		"over",
		"out",
		"move",
		"cancel",
		"wheelEvent"
	],
	"mappings": "OAAOA,MAAgB,8BAChBC,MAAQ,eAEf,MAAMC,EAAU,CACdC,KAmBaC,GACb,MAAMC,EAAUL,EAAWK,QACrBC,EAAgCF,EAAOE,WAAa,GAG1DJ,EAAQK,cACN,iBAAkBH,GACjBH,EAAGO,KAAKJ,EAAOK,gBAAkBT,EAAWU,oBAAoBN,EAAOK,cAG1EP,EAAQS,sBAAoD,IAA7BL,EAAUM,kBAA8BZ,EAAWa,aAElFX,EAAQY,MAAQ,iBAAiBC,KAAKT,EAAUU,UAGhDd,EAAQe,OAAS,iBAAiBF,KAAKT,EAAUU,WAAa,YAAYD,KAAKT,EAAUY,YAEzFhB,EAAQiB,MAAQ,SAASJ,KAAKT,EAAUc,WAGxClB,EAAQmB,cACgB,UAAtBf,EAAUgB,SAAuBpB,EAAQK,eAAiB,SAASQ,KAAKT,EAAUc,WAGpFlB,EAAQqB,wBAA2B,YAAalB,EAAQmB,UACpD,UACA,0BAA2BnB,EAAQmB,UACjC,wBACA,uBAAwBnB,EAAQmB,UAC9B,qBACA,qBAAsBnB,EAAQmB,UAC5B,mBACA,oBAEVtB,EAAQuB,YAAcvB,EAAQS,qBAC1BX,EAAWa,eAAiBT,EAAOsB,eACjC,CACAC,GAAI,cACJC,KAAM,gBACNC,KAAM,YACNC,IAAK,WACLC,KAAM,gBACNC,OAAQ,mBAER,CACAL,GAAI,YACJC,KAAM,cACNC,KAAM,cACNC,IAAK,aACLC,KAAM,cACNC,OAAQ,iBAEV,KAGJ9B,EAAQ+B,WAAajC,EAAWU,UAAY,iBAAkBV,EAAWU,SAAW,aAAe,SAzEnGH,cAAe,KACfI,qBAAsB,KACtBM,OAAQ,KACRH,MAAO,KACPK,MAAO,KACPE,cAAe,KACfE,wBAAyB,KACzBE,YAAa,KAQbQ,WAAY,qBA6DC/B",
	"sourcesContent": [
		"import domObjects from './domObjects'\nimport is from './is'\n\nconst browser = {\n  init,\n  supportsTouch: null as boolean,\n  supportsPointerEvent: null as boolean,\n  isIOS7: null as boolean,\n  isIOS: null as boolean,\n  isIe9: null as boolean,\n  isOperaMobile: null as boolean,\n  prefixedMatchesSelector: null as 'matches',\n  pEventTypes: null as {\n    up: string\n    down: string\n    over: string\n    out: string\n    move: string\n    cancel: string\n  },\n  wheelEvent: null as string,\n}\n\nfunction init (window: any) {\n  const Element = domObjects.Element\n  const navigator: Partial<Navigator> = window.navigator || {}\n\n  // Does the browser support touch input?\n  browser.supportsTouch =\n    'ontouchstart' in window ||\n    (is.func(window.DocumentTouch) && domObjects.document instanceof window.DocumentTouch)\n\n  // Does the browser support PointerEvents\n  browser.supportsPointerEvent = navigator.pointerEnabled !== false && !!domObjects.PointerEvent\n\n  browser.isIOS = /iP(hone|od|ad)/.test(navigator.platform)\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  browser.isIOS7 = /iP(hone|od|ad)/.test(navigator.platform) && /OS 7[^\\d]/.test(navigator.appVersion)\n\n  browser.isIe9 = /MSIE 9/.test(navigator.userAgent)\n\n  // Opera Mobile must be handled differently\n  browser.isOperaMobile =\n    navigator.appName === 'Opera' && browser.supportsTouch && /Presto/.test(navigator.userAgent)\n\n  // prefix matchesSelector\n  browser.prefixedMatchesSelector = ('matches' in Element.prototype\n    ? 'matches'\n    : 'webkitMatchesSelector' in Element.prototype\n      ? 'webkitMatchesSelector'\n      : 'mozMatchesSelector' in Element.prototype\n        ? 'mozMatchesSelector'\n        : 'oMatchesSelector' in Element.prototype\n          ? 'oMatchesSelector'\n          : 'msMatchesSelector') as 'matches'\n\n  browser.pEventTypes = browser.supportsPointerEvent\n    ? domObjects.PointerEvent === window.MSPointerEvent\n      ? {\n        up: 'MSPointerUp',\n        down: 'MSPointerDown',\n        over: 'mouseover',\n        out: 'mouseout',\n        move: 'MSPointerMove',\n        cancel: 'MSPointerCancel',\n      }\n      : {\n        up: 'pointerup',\n        down: 'pointerdown',\n        over: 'pointerover',\n        out: 'pointerout',\n        move: 'pointermove',\n        cancel: 'pointercancel',\n      }\n    : null\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  browser.wheelEvent = domObjects.document && 'onmousewheel' in domObjects.document ? 'mousewheel' : 'wheel'\n}\n\nexport default browser\n"
	]
}