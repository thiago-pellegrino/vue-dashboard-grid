{
	"version": 3,
	"sources": [
		"interactions.ts"
	],
	"names": [
		"browser",
		"domObjects",
		"nodeContains",
		"pointerUtils",
		"InteractionBase",
		"interactablePreventDefault",
		"finder",
		"methodNames",
		"install",
		"scope",
		"listeners",
		"method",
		"doOnInteractions",
		"pEventTypes",
		"docEvents",
		"PointerEvent",
		"type",
		"down",
		"listener",
		"releasePointersOnRemovedEls",
		"pointerDown",
		"move",
		"pointerMove",
		"up",
		"pointerUp",
		"cancel",
		"push",
		"event",
		"interaction",
		"interactions",
		"list",
		"documentBlur",
		"prevTouchTime",
		"Interaction",
		"pointerMoveTolerance",
		"value",
		"_now",
		"now",
		"new",
		"options",
		"scopeFire",
		"name",
		"arg",
		"fire",
		"pointerIsDown",
		"pointerType",
		"_interacting",
		"pointer",
		"pointers",
		"documents",
		"some",
		"doc",
		"downTarget",
		"removePointer",
		"usePlugin",
		"getPointerType",
		"eventTarget",
		"curEventTarget",
		"getEventTargets",
		"matches",
		"test",
		"changedTouch",
		"changedTouches",
		"pointerId",
		"getPointerId",
		"searchDetails",
		"eventType",
		"getInteraction",
		"invalidPointer",
		"supportsPointerEvent",
		"i",
		"length",
		"timeStamp",
		"foundInteraction",
		"search",
		"signalArg",
		"onDocSignal",
		"eventMethodName",
		"events",
		"eventMethod",
		"isIOS",
		"passive",
		"delegatedEvents",
		"delegateListener",
		"delegateUseCapture",
		"eventOptions",
		"id",
		"interactable",
		"stop",
		"destroy",
		"splice"
	],
	"mappings": "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",
	"sourcesContent": [
		"import type { Scope, ActionName, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { Listener } from '@interactjs/types/index'\nimport browser from '@interactjs/utils/browser'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { nodeContains } from '@interactjs/utils/domUtils'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport InteractionBase from './Interaction'\nimport interactablePreventDefault from './interactablePreventDefault'\nimport type { SearchDetails } from './interactionFinder'\nimport finder from './interactionFinder'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    Interaction: typeof InteractionBase\n    interactions: {\n      new: <T extends ActionName>(options: any) => InteractionBase<T>\n      list: Array<InteractionBase<ActionName>>\n      listeners: { [type: string]: Listener }\n      docEvents: Array<{ type: string, listener: Listener }>\n      pointerMoveTolerance: number\n    }\n    prevTouchTime: number\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:find': {\n      interaction: InteractionBase\n      searchDetails: SearchDetails\n    }\n  }\n}\n\nconst methodNames = [\n  'pointerDown',\n  'pointerMove',\n  'pointerUp',\n  'updatePointer',\n  'removePointer',\n  'windowBlur',\n]\n\nfunction install (scope: Scope) {\n  const listeners = {} as any\n\n  for (const method of methodNames) {\n    listeners[method] = doOnInteractions(method, scope)\n  }\n\n  const pEventTypes = browser.pEventTypes\n  let docEvents: typeof scope.interactions.docEvents\n\n  if (domObjects.PointerEvent) {\n    docEvents = [\n      { type: pEventTypes.down, listener: releasePointersOnRemovedEls },\n      { type: pEventTypes.down, listener: listeners.pointerDown },\n      { type: pEventTypes.move, listener: listeners.pointerMove },\n      { type: pEventTypes.up, listener: listeners.pointerUp },\n      { type: pEventTypes.cancel, listener: listeners.pointerUp },\n    ]\n  } else {\n    docEvents = [\n      { type: 'mousedown', listener: listeners.pointerDown },\n      { type: 'mousemove', listener: listeners.pointerMove },\n      { type: 'mouseup', listener: listeners.pointerUp },\n\n      { type: 'touchstart', listener: releasePointersOnRemovedEls },\n      { type: 'touchstart', listener: listeners.pointerDown },\n      { type: 'touchmove', listener: listeners.pointerMove },\n      { type: 'touchend', listener: listeners.pointerUp },\n      { type: 'touchcancel', listener: listeners.pointerUp },\n    ]\n  }\n\n  docEvents.push({\n    type: 'blur',\n    listener (event) {\n      for (const interaction of scope.interactions.list) {\n        interaction.documentBlur(event)\n      }\n    },\n  })\n\n  // for ignoring browser's simulated mouse events\n  scope.prevTouchTime = 0\n\n  scope.Interaction = class <T extends ActionName> extends InteractionBase<T> {\n    get pointerMoveTolerance () {\n      return scope.interactions.pointerMoveTolerance\n    }\n\n    set pointerMoveTolerance (value) {\n      scope.interactions.pointerMoveTolerance = value\n    }\n\n    _now () {\n      return scope.now()\n    }\n  }\n\n  scope.interactions = {\n    // all active and idle interactions\n    list: [],\n    new<T extends ActionName> (options: { pointerType?: string, scopeFire?: Scope['fire'] }) {\n      options.scopeFire = (name, arg) => scope.fire(name, arg)\n\n      const interaction = new scope.Interaction<T>(options as Required<typeof options>)\n\n      scope.interactions.list.push(interaction)\n      return interaction\n    },\n    listeners,\n    docEvents,\n    pointerMoveTolerance: 1,\n  }\n\n  function releasePointersOnRemovedEls () {\n    // for all inactive touch interactions with pointers down\n    for (const interaction of scope.interactions.list) {\n      if (!interaction.pointerIsDown || interaction.pointerType !== 'touch' || interaction._interacting) {\n        continue\n      }\n\n      // if a pointer is down on an element that is no longer in the DOM tree\n      for (const pointer of interaction.pointers) {\n        if (!scope.documents.some(({ doc }) => nodeContains(doc, pointer.downTarget))) {\n          // remove the pointer from the interaction\n          interaction.removePointer(pointer.pointer, pointer.event)\n        }\n      }\n    }\n  }\n\n  scope.usePlugin(interactablePreventDefault)\n}\n\nfunction doOnInteractions (method: string, scope: Scope) {\n  return function (event: Event) {\n    const interactions = scope.interactions.list\n\n    const pointerType = pointerUtils.getPointerType(event)\n    const [eventTarget, curEventTarget] = pointerUtils.getEventTargets(event)\n    const matches: any[] = [] // [ [pointer, interaction], ...]\n\n    if (/^touch/.test(event.type)) {\n      scope.prevTouchTime = scope.now()\n\n      // @ts-expect-error\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch\n        const pointerId = pointerUtils.getPointerId(pointer)\n        const searchDetails: SearchDetails = {\n          pointer,\n          pointerId,\n          pointerType,\n          eventType: event.type,\n          eventTarget,\n          curEventTarget,\n          scope,\n        }\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    } else {\n      let invalidPointer = false\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < interactions.length && !invalidPointer; i++) {\n          invalidPointer = interactions[i].pointerType !== 'mouse' && interactions[i].pointerIsDown\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer =\n          invalidPointer ||\n          scope.now() - scope.prevTouchTime < 500 ||\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          event.timeStamp === 0\n      }\n\n      if (!invalidPointer) {\n        const searchDetails = {\n          pointer: event as PointerEvent,\n          pointerId: pointerUtils.getPointerId(event as PointerEvent),\n          pointerType,\n          eventType: event.type,\n          curEventTarget,\n          eventTarget,\n          scope,\n        }\n\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n\n    // eslint-disable-next-line no-shadow\n    for (const [pointer, eventTarget, curEventTarget, interaction] of matches) {\n      interaction[method](pointer, event, eventTarget, curEventTarget)\n    }\n  }\n}\n\nfunction getInteraction (searchDetails: SearchDetails) {\n  const { pointerType, scope } = searchDetails\n\n  const foundInteraction = finder.search(searchDetails)\n  const signalArg = { interaction: foundInteraction, searchDetails }\n\n  scope.fire('interactions:find', signalArg)\n\n  return signalArg.interaction || scope.interactions.new({ pointerType })\n}\n\nfunction onDocSignal<T extends 'scope:add-document' | 'scope:remove-document'> (\n  { doc, scope, options }: SignalArgs[T],\n  eventMethodName: 'add' | 'remove',\n) {\n  const {\n    interactions: { docEvents },\n    events,\n  } = scope\n  const eventMethod = events[eventMethodName]\n\n  if (scope.browser.isIOS && !options.events) {\n    options.events = { passive: false }\n  }\n\n  // delegate event listener\n  for (const eventType in events.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener)\n    eventMethod(doc, eventType, events.delegateUseCapture, true)\n  }\n\n  const eventOptions = options && options.events\n\n  for (const { type, listener } of docEvents) {\n    eventMethod(doc, type, listener, eventOptions)\n  }\n}\n\nconst interactions: Plugin = {\n  id: 'core/interactions',\n  install,\n  listeners: {\n    'scope:add-document': (arg) => onDocSignal(arg, 'add'),\n    'scope:remove-document': (arg) => onDocSignal(arg, 'remove'),\n    'interactable:unset': ({ interactable }, scope) => {\n      // Stop and destroy related interactions when an Interactable is unset\n      for (let i = scope.interactions.list.length - 1; i >= 0; i--) {\n        const interaction = scope.interactions.list[i]\n\n        if (interaction.interactable !== interactable) {\n          continue\n        }\n\n        interaction.stop()\n        scope.fire('interactions:destroy', { interaction })\n        interaction.destroy()\n\n        if (scope.interactions.list.length > 2) {\n          scope.interactions.list.splice(i, 1)\n        }\n      }\n    },\n  },\n  onDocSignal,\n  doOnInteractions,\n  methodNames,\n}\n\nexport default interactions\n"
	]
}