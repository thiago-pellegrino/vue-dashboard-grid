{
	"version": 3,
	"sources": [
		"scope.ts"
	],
	"names": [
		"browser",
		"clone",
		"domObjects",
		"extend",
		"is",
		"raf",
		"win",
		"Eventable",
		"InteractEvent",
		"createInteractStatic",
		"Interactable",
		"InteractableBase",
		"InteractableSet",
		"events",
		"interactions",
		"defaults",
		"Scope",
		"constructor",
		"id",
		"Math",
		"floor",
		"random",
		"isInitialized",
		"listenerMaps",
		"actions",
		"map",
		"phases",
		"start",
		"move",
		"end",
		"methodDict",
		"phaselessTypes",
		"interactStatic",
		"interactables",
		"_win",
		"document",
		"window",
		"documents",
		"_plugins",
		"list",
		"onWindowUnload",
		"event",
		"removeDocument",
		"target",
		"scope",
		"_defaults",
		"set",
		"options",
		"fire",
		"interactable",
		"unset",
		"splice",
		"indexOf",
		"addListeners",
		"push",
		"name",
		"arg",
		"listener",
		"init",
		"initScope",
		"pluginIsInstalled",
		"plugin",
		"usePlugin",
		"install",
		"listeners",
		"before",
		"index",
		"len",
		"length",
		"reduce",
		"acc",
		"pluginIdRoot",
		"otherId",
		"addDocument",
		"doc",
		"getDocIndex",
		"getWindow",
		"add",
		"remove",
		"i",
		"getDocOptions",
		"docIndex",
		"now",
		"Date",
		"replace"
	],
	"mappings": "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",
	"sourcesContent": [
		"import type Interaction from '@interactjs/core/Interaction'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport domObjects from '@interactjs/utils/domObjects'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport * as win from '@interactjs/utils/window'\n\nimport { Eventable } from './Eventable'\nimport type { PhaseMap } from './InteractEvent'\nimport { InteractEvent } from './InteractEvent'\nimport { createInteractStatic } from './InteractStatic'\nimport type { Interactable } from './Interactable'\nimport { Interactable as InteractableBase } from './Interactable'\nimport { InteractableSet } from './InteractableSet'\nimport events from './events'\nimport interactions from './interactions'\nimport type { OptionsArg } from './options'\nimport { defaults } from './options'\n\nexport interface SignalArgs {\n  'scope:add-document': DocSignalArg\n  'scope:remove-document': DocSignalArg\n  'interactable:unset': { interactable: InteractableBase }\n  'interactable:set': { interactable: InteractableBase, options: OptionsArg }\n  'interactions:destroy': { interaction: Interaction }\n}\n\nexport type ListenerName = keyof SignalArgs\n\nexport type ListenerMap = {\n  [P in ListenerName]?: (arg: SignalArgs[P], scope: Scope, signalName: P) => void | boolean\n}\n\ninterface DocSignalArg {\n  doc: Document\n  window: Window\n  scope: Scope\n  options: Record<string, any>\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionMap {}\nexport type ActionName = keyof ActionMap\n\nexport interface Actions {\n  map: ActionMap\n  phases: PhaseMap\n  methodDict: { [P in ActionName]?: keyof Interactable }\n  phaselessTypes: { [type: string]: true }\n}\n\nexport interface Plugin {\n  [key: string]: any\n  id?: string\n  listeners?: ListenerMap\n  before?: string[]\n  install?(scope: Scope, options?: any): void\n}\n\nexport class Scope {\n  id = `__interact_scope_${Math.floor(Math.random() * 100)}`\n  isInitialized = false\n  listenerMaps: Array<{\n    map: ListenerMap\n    id: string\n  }> = []\n\n  browser = browser\n  defaults = clone(defaults) as typeof defaults\n  Eventable = Eventable\n  actions: Actions = {\n    map: {},\n    phases: {\n      start: true,\n      move: true,\n      end: true,\n    },\n    methodDict: {},\n    phaselessTypes: {},\n  }\n\n  interactStatic = createInteractStatic(this)\n  InteractEvent = InteractEvent\n  Interactable: typeof InteractableBase\n  interactables = new InteractableSet(this)\n\n  // main window\n  _win!: Window\n\n  // main document\n  document!: Document\n\n  // main window\n  window!: Window\n\n  // all documents being listened to\n  documents: Array<{ doc: Document, options: any }> = []\n\n  _plugins: {\n    list: Plugin[]\n    map: { [id: string]: Plugin }\n  } = {\n    list: [],\n    map: {},\n  }\n\n  constructor () {\n    const scope = this\n\n    this.Interactable = class extends InteractableBase {\n      get _defaults () {\n        return scope.defaults\n      }\n\n      set<T extends InteractableBase> (this: T, options: OptionsArg) {\n        super.set(options)\n\n        scope.fire('interactable:set', {\n          options,\n          interactable: this,\n        })\n\n        return this\n      }\n\n      unset (this: InteractableBase) {\n        super.unset()\n        scope.interactables.list.splice(scope.interactables.list.indexOf(this), 1)\n\n        scope.fire('interactable:unset', { interactable: this })\n      }\n    }\n  }\n\n  addListeners (map: ListenerMap, id?: string) {\n    this.listenerMaps.push({ id, map })\n  }\n\n  fire<T extends ListenerName> (name: T, arg: SignalArgs[T]): void | false {\n    for (const {\n      map: { [name]: listener },\n    } of this.listenerMaps) {\n      if (!!listener && listener(arg as any, this, name as never) === false) {\n        return false\n      }\n    }\n  }\n\n  onWindowUnload = (event: BeforeUnloadEvent) => this.removeDocument(event.target as Document)\n\n  init (window: Window | typeof globalThis) {\n    return this.isInitialized ? this : initScope(this, window)\n  }\n\n  pluginIsInstalled (plugin: Plugin) {\n    return this._plugins.map[plugin.id] || this._plugins.list.indexOf(plugin) !== -1\n  }\n\n  usePlugin (plugin: Plugin, options?: { [key: string]: any }) {\n    if (!this.isInitialized) {\n      return this\n    }\n\n    if (this.pluginIsInstalled(plugin)) {\n      return this\n    }\n\n    if (plugin.id) {\n      this._plugins.map[plugin.id] = plugin\n    }\n    this._plugins.list.push(plugin)\n\n    if (plugin.install) {\n      plugin.install(this, options)\n    }\n\n    if (plugin.listeners && plugin.before) {\n      let index = 0\n      const len = this.listenerMaps.length\n      const before = plugin.before.reduce((acc, id) => {\n        acc[id] = true\n        acc[pluginIdRoot(id)] = true\n        return acc\n      }, {})\n\n      for (; index < len; index++) {\n        const otherId = this.listenerMaps[index].id\n\n        if (before[otherId] || before[pluginIdRoot(otherId)]) {\n          break\n        }\n      }\n\n      this.listenerMaps.splice(index, 0, { id: plugin.id, map: plugin.listeners })\n    } else if (plugin.listeners) {\n      this.listenerMaps.push({ id: plugin.id, map: plugin.listeners })\n    }\n\n    return this\n  }\n\n  addDocument (doc: Document, options?: any): void | false {\n    // do nothing if document is already known\n    if (this.getDocIndex(doc) !== -1) {\n      return false\n    }\n\n    const window = win.getWindow(doc)\n\n    options = options ? extend({}, options) : {}\n\n    this.documents.push({ doc, options })\n    this.events.documents.push(doc)\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== this.document) {\n      this.events.add(window, 'unload', this.onWindowUnload)\n    }\n\n    this.fire('scope:add-document', { doc, window, scope: this, options })\n  }\n\n  removeDocument (doc: Document) {\n    const index = this.getDocIndex(doc)\n\n    const window = win.getWindow(doc)\n    const options = this.documents[index].options\n\n    this.events.remove(window, 'unload', this.onWindowUnload)\n\n    this.documents.splice(index, 1)\n    this.events.documents.splice(index, 1)\n\n    this.fire('scope:remove-document', { doc, window, scope: this, options })\n  }\n\n  getDocIndex (doc: Document) {\n    for (let i = 0; i < this.documents.length; i++) {\n      if (this.documents[i].doc === doc) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getDocOptions (doc: Document) {\n    const docIndex = this.getDocIndex(doc)\n\n    return docIndex === -1 ? null : this.documents[docIndex].options\n  }\n\n  now () {\n    return (((this.window as any).Date as typeof Date) || Date).now()\n  }\n}\n\nexport function initScope (scope: Scope, window: Window | typeof globalThis) {\n  scope.isInitialized = true\n\n  if (is.window(window)) {\n    win.init(window)\n  }\n\n  domObjects.init(window)\n  browser.init(window)\n  raf.init(window)\n\n  // @ts-expect-error\n  scope.window = window\n  scope.document = window.document\n\n  scope.usePlugin(interactions)\n  scope.usePlugin(events)\n\n  return scope\n}\n\nfunction pluginIdRoot (id: string) {\n  return id && id.replace(/\\/.*$/, '')\n}\n"
	]
}