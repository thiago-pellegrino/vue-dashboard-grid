{
	"version": 3,
	"sources": [
		"InteractEvent.ts"
	],
	"names": [
		"extend",
		"getOriginXY",
		"hypot",
		"BaseEvent",
		"defaults",
		"InteractEvent",
		"constructor",
		"interaction",
		"event",
		"actionName",
		"phase",
		"element",
		"preEnd",
		"type",
		"super",
		"this",
		"target",
		"currentTarget",
		"relatedTarget",
		"screenX",
		"screenY",
		"button",
		"buttons",
		"ctrlKey",
		"shiftKey",
		"altKey",
		"metaKey",
		"page",
		"client",
		"delta",
		"rect",
		"x0",
		"y0",
		"t0",
		"dt",
		"duration",
		"clientX0",
		"clientY0",
		"velocity",
		"speed",
		"swipe",
		"timeStamp",
		"axes",
		"interactable",
		"deltaSource",
		"options",
		"origin",
		"starting",
		"ending",
		"prevEvent",
		"coords",
		"start",
		"cur",
		"x",
		"y",
		"pointers",
		"length",
		"downTime",
		"getSwipe",
		"_interaction",
		"angle",
		"Math",
		"atan2",
		"velocityY",
		"velocityX",
		"PI",
		"left",
		"up",
		"down",
		"right",
		"preventDefault",
		"stopImmediatePropagation",
		"immediatePropagationStopped",
		"propagationStopped",
		"stopPropagation",
		"Object",
		"defineProperties",
		"prototype",
		"pageX",
		"get",
		"set",
		"value",
		"pageY",
		"clientX",
		"clientY",
		"dx",
		"dy"
	],
	"mappings": "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",
	"sourcesContent": [
		"import type { ActionName } from '@interactjs/core/scope'\nimport type { Point, FullRect, PointerEventType, Element } from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\n\nimport { BaseEvent } from './BaseEvent'\nimport type { Interaction } from './Interaction'\nimport { defaults } from './options'\n\nexport type EventPhase = keyof PhaseMap\n\nexport interface PhaseMap {\n  start: true\n  move: true\n  end: true\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface InteractEvent {\n  pageX: number\n  pageY: number\n\n  clientX: number\n  clientY: number\n\n  dx: number\n  dy: number\n\n  velocityX: number\n  velocityY: number\n}\n\nexport class InteractEvent<\n  T extends ActionName = never,\n  P extends EventPhase = EventPhase\n> extends BaseEvent<T> {\n  target: Element\n  currentTarget: Element\n  relatedTarget: Element | null = null\n  screenX?: number\n  screenY?: number\n  button: number\n  buttons: number\n  ctrlKey: boolean\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  page: Point\n  client: Point\n  delta: Point\n  rect: FullRect\n  x0: number\n  y0: number\n  t0: number\n  dt: number\n  duration: number\n  clientX0: number\n  clientY0: number\n  velocity: Point\n  speed: number\n  swipe: ReturnType<InteractEvent<T>['getSwipe']>\n  timeStamp: any\n  // resize\n  axes?: 'x' | 'y' | 'xy'\n  preEnd?: boolean\n\n  /** */\n  constructor (\n    interaction: Interaction<T>,\n    event: PointerEventType,\n    actionName: T,\n    phase: P,\n    element: Element,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    super(interaction)\n\n    element = element || interaction.element\n\n    const target = interaction.interactable\n    const deltaSource = (((target && target.options) || defaults) as any).deltaSource as 'page' | 'client'\n    const origin = getOriginXY(target, element, actionName)\n    const starting = phase === 'start'\n    const ending = phase === 'end'\n    const prevEvent = starting ? this : interaction.prevEvent\n    const coords = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur\n\n    this.page = extend({}, coords.page)\n    this.client = extend({}, coords.client)\n    this.rect = extend({}, interaction.rect)\n    this.timeStamp = coords.timeStamp\n\n    if (!ending) {\n      this.page.x -= origin.x\n      this.page.y -= origin.y\n\n      this.client.x -= origin.x\n      this.client.y -= origin.y\n    }\n\n    this.ctrlKey = event.ctrlKey\n    this.altKey = event.altKey\n    this.shiftKey = event.shiftKey\n    this.metaKey = event.metaKey\n    this.button = (event as MouseEvent).button\n    this.buttons = (event as MouseEvent).buttons\n    this.target = element\n    this.currentTarget = element\n    this.preEnd = preEnd\n    this.type = type || actionName + (phase || '')\n    this.interactable = target\n\n    this.t0 = starting ? interaction.pointers[interaction.pointers.length - 1].downTime : prevEvent.t0\n\n    this.x0 = interaction.coords.start.page.x - origin.x\n    this.y0 = interaction.coords.start.page.y - origin.y\n    this.clientX0 = interaction.coords.start.client.x - origin.x\n    this.clientY0 = interaction.coords.start.client.y - origin.y\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 }\n    } else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      }\n    }\n\n    this.dt = interaction.coords.delta.timeStamp\n    this.duration = this.timeStamp - this.t0\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource])\n    this.speed = hypot(this.velocity.x, this.velocity.y)\n\n    this.swipe = ending || phase === 'inertiastart' ? this.getSwipe() : null\n  }\n\n  getSwipe () {\n    const interaction = this._interaction\n\n    if (interaction.prevEvent.speed < 600 || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null\n    }\n\n    let angle = (180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX)) / Math.PI\n    const overlap = 22.5\n\n    if (angle < 0) {\n      angle += 360\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap\n    const up = 225 - overlap <= angle && angle < 315 + overlap\n\n    const right = !left && (315 - overlap <= angle || angle < 45 + overlap)\n    const down = !up && 45 - overlap <= angle && angle < 135 + overlap\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    }\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperties(InteractEvent.prototype, {\n  pageX: {\n    get () {\n      return this.page.x\n    },\n    set (value) {\n      this.page.x = value\n    },\n  },\n  pageY: {\n    get () {\n      return this.page.y\n    },\n    set (value) {\n      this.page.y = value\n    },\n  },\n\n  clientX: {\n    get () {\n      return this.client.x\n    },\n    set (value) {\n      this.client.x = value\n    },\n  },\n  clientY: {\n    get () {\n      return this.client.y\n    },\n    set (value) {\n      this.client.y = value\n    },\n  },\n\n  dx: {\n    get () {\n      return this.delta.x\n    },\n    set (value) {\n      this.delta.x = value\n    },\n  },\n  dy: {\n    get () {\n      return this.delta.y\n    },\n    set (value) {\n      this.delta.y = value\n    },\n  },\n\n  velocityX: {\n    get () {\n      return this.velocity.x\n    },\n    set (value) {\n      this.velocity.x = value\n    },\n  },\n  velocityY: {\n    get () {\n      return this.velocity.y\n    },\n    set (value) {\n      this.velocity.y = value\n    },\n  },\n})\n"
	]
}