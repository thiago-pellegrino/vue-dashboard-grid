{
	"version": 3,
	"sources": [
		"plugin.ts"
	],
	"names": [
		"domUtils",
		"extend",
		"getOriginXY",
		"is",
		"normalizeListeners",
		"pointerUtils",
		"drag",
		"DropEvent",
		"install",
		"scope",
		"actions",
		"interactStatic",
		"interact",
		"Interactable",
		"defaults",
		"usePlugin",
		"prototype",
		"dropzone",
		"options",
		"dropzoneMethod",
		"dropCheck",
		"dragEvent",
		"event",
		"draggable",
		"draggableElement",
		"dropElement",
		"rect",
		"dropCheckMethod",
		"dynamicDrop",
		"newValue",
		"bool",
		"phaselessTypes",
		"dragenter",
		"dragleave",
		"dropactivate",
		"dropdeactivate",
		"dropmove",
		"drop",
		"methodDict",
		"collectDrops",
		"interactables",
		"drops",
		"list",
		"enabled",
		"accept",
		"element",
		"string",
		"matchesSelector",
		"func",
		"dropElements",
		"target",
		"_context",
		"querySelectorAll",
		"array",
		"dropzoneElement",
		"push",
		"getRect",
		"fireActivationEvents",
		"activeDrops",
		"slice",
		"fire",
		"propagationStopped",
		"immediatePropagationStopped",
		"getActiveDrops",
		"dragElement",
		"activeDrop",
		"getDrop",
		"dropState",
		"interactable",
		"pointerEvent",
		"validDrops",
		"dropIndex",
		"indexOfDeepestElement",
		"getDropEvents",
		"interaction",
		"_pointerEvent",
		"dropEvents",
		"enter",
		"leave",
		"activate",
		"deactivate",
		"move",
		"type",
		"rejected",
		"cur",
		"prev",
		"dragLeave",
		"prevDropzone",
		"dragEnter",
		"relatedTarget",
		"dragmove",
		"fireDropEvents",
		"events",
		"onEventCreated",
		"iEvent",
		"dropResult",
		"object",
		"listeners",
		"normalized",
		"corrected",
		"Object",
		"keys",
		"reduce",
		"acc",
		"correctedType",
		"test",
		"off",
		"on",
		"ondrop",
		"ondropactivate",
		"ondropdeactivate",
		"ondragenter",
		"ondragleave",
		"ondropmove",
		"overlap",
		"number",
		"Math",
		"max",
		"min",
		"checker",
		"dropped",
		"dropOverlap",
		"origin",
		"page",
		"getPageXY",
		"x",
		"y",
		"horizontal",
		"left",
		"right",
		"vertical",
		"top",
		"bottom",
		"dragRect",
		"cx",
		"width",
		"cy",
		"height",
		"overlapArea",
		"overlapRatio",
		"id",
		"prepared",
		"name",
		"arg"
	],
	"mappings": "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",
	"sourcesContent": [
		"import type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { DropzoneOptions, Element, PointerEventType, Rect } from '@interactjs/types/index'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { DragEvent } from '../drag/plugin'\nimport drag from '../drag/plugin'\n\nimport { DropEvent } from './DropEvent'\n\nexport interface DropzoneMethod {\n  (this: Interactable, options: DropzoneOptions | boolean): Interactable\n  (): DropzoneOptions\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    dropzone: DropzoneMethod\n    dropCheck: (\n      dragEvent: InteractEvent,\n      event: PointerEventType,\n      draggable: Interactable,\n      draggableElement: Element,\n      dropElemen: Element,\n      rect: any,\n    ) => boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    dropState?: DropState\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    prevDropzone?: Interactable\n    dropzone?: Interactable\n    dragEnter?: Element\n    dragLeave?: Element\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drop: DropzoneOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface ActionMap {\n    drop?: typeof drop\n  }\n\n  interface Scope {\n    dynamicDrop?: boolean\n  }\n\n  interface SignalArgs {\n    'actions/drop:start': DropSignalArg\n    'actions/drop:move': DropSignalArg\n    'actions/drop:end': DropSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/InteractStatic' {\n  interface InteractStatic {\n    dynamicDrop: (this: InteractStatic, newValue?: boolean) => boolean | this\n  }\n}\n\ninterface DropSignalArg {\n  interaction: Interaction<'drag'>\n  dragEvent: DragEvent\n}\n\nexport interface ActiveDrop {\n  dropzone: Interactable\n  element: Element\n  rect: Rect\n}\n\nexport interface DropState {\n  cur: {\n    // the dropzone a drag target might be dropped into\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  prev: {\n    // the dropzone that was recently dragged away from\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  // wheather the potential drop was rejected from a listener\n  rejected: boolean\n  // the drop events related to the current drag event\n  events: FiredDropEvents\n  activeDrops: ActiveDrop[]\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    /** @lends module:interact */\n    interactStatic: interact,\n    /** @lends Interactable */\n    Interactable,\n    defaults,\n  } = scope\n\n  scope.usePlugin(drag)\n\n  /**\n   *\n   * ```js\n   * interact('.drop').dropzone({\n   *   accept: '.can-drop' || document.getElementById('single-drop'),\n   *   overlap: 'pointer' || 'center' || zeroToOne\n   * }\n   * ```\n   *\n   * Returns or sets whether draggables can be dropped onto this target to\n   * trigger drop events\n   *\n   * Dropzones can receive the following events:\n   *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n   *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n   *  - `dragmove` when a draggable that has entered the dropzone is moved\n   *  - `drop` when a draggable is dropped into this dropzone\n   *\n   * Use the `accept` option to allow only elements that match the given CSS\n   * selector or element. The value can be:\n   *\n   *  - **an Element** - only that element can be dropped into this dropzone.\n   *  - **a string**, - the element being dragged must match it as a CSS selector.\n   *  - **`null`** - accept options is cleared - it accepts any element.\n   *\n   * Use the `overlap` option to set how drops are checked for. The allowed\n   * values are:\n   *\n   *   - `'pointer'`, the pointer must be over the dropzone (default)\n   *   - `'center'`, the draggable element's center must be over the dropzone\n   *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n   *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n   *   over the dropzone\n   *\n   * Use the `checker` option to specify a function to check if a dragged element\n   * is over this Interactable.\n   *\n   * @param {boolean | object | null} [options] The new options to be set.\n   * @return {object | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.dropzone = function (this: Interactable, options?: DropzoneOptions | boolean) {\n    return dropzoneMethod(this, options)\n  } as Interactable['dropzone']\n\n  /**\n   * ```js\n   * interact(target)\n   * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n   *                       event,             // TouchEvent/PointerEvent/MouseEvent\n   *                       dropped,           // bool result of the default checker\n   *                       dropzone,          // dropzone Interactable\n   *                       dropElement,       // dropzone elemnt\n   *                       draggable,         // draggable Interactable\n   *                       draggableElement) {// draggable element\n   *\n   *   return dropped && event.target.hasAttribute('allow-drop')\n   * }\n   * ```\n   */\n  Interactable.prototype.dropCheck = function (\n    this: Interactable,\n    dragEvent,\n    event,\n    draggable,\n    draggableElement,\n    dropElement,\n    rect,\n  ) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect)\n  }\n\n  /**\n   * Returns or sets whether the dimensions of dropzone elements are calculated\n   * on every dragmove or only on dragstart for the default dropChecker\n   *\n   * @param {boolean} [newValue] True to check on each move. False to check only\n   * before start\n   * @return {boolean | interact} The current setting or interact\n   */\n  interact.dynamicDrop = function (newValue?: boolean) {\n    if (is.bool(newValue)) {\n      // if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones)\n      // }\n\n      scope.dynamicDrop = newValue\n\n      return interact\n    }\n    return scope.dynamicDrop\n  }\n\n  extend(actions.phaselessTypes, {\n    dragenter: true,\n    dragleave: true,\n    dropactivate: true,\n    dropdeactivate: true,\n    dropmove: true,\n    drop: true,\n  })\n  actions.methodDict.drop = 'dropzone'\n\n  scope.dynamicDrop = false\n\n  defaults.actions.drop = drop.defaults\n}\n\nfunction collectDrops ({ interactables }: Scope, draggableElement: Element) {\n  const drops: ActiveDrop[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) {\n      continue\n    }\n\n    const accept = dropzone.options.drop.accept\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if (\n      (is.element(accept) && accept !== draggableElement) ||\n      (is.string(accept) && !domUtils.matchesSelector(draggableElement, accept)) ||\n      (is.func(accept) && !accept({ dropzone, draggableElement }))\n    ) {\n      continue\n    }\n\n    // query for new elements if necessary\n    const dropElements = (is.string(dropzone.target)\n      ? dropzone._context.querySelectorAll(dropzone.target)\n      : is.array(dropzone.target)\n        ? dropzone.target\n        : [dropzone.target]) as Element[]\n\n    for (const dropzoneElement of dropElements) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n          rect: dropzone.getRect(dropzoneElement),\n        })\n      }\n    }\n  }\n\n  return drops\n}\n\nfunction fireActivationEvents (activeDrops: ActiveDrop[], event: DropEvent) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops.slice()) {\n    event.dropzone = dropzone\n\n    // set current element as event target\n    event.target = element\n    dropzone.fire(event)\n    event.propagationStopped = event.immediatePropagationStopped = false\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops (scope: Scope, dragElement: Element) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDrops(scope, dragElement)\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element)\n  }\n\n  return activeDrops\n}\n\nfunction getDrop (\n  { dropState, interactable: draggable, element: dragElement }: Partial<Interaction>,\n  dragEvent,\n  pointerEvent,\n) {\n  const validDrops = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropState.activeDrops) {\n    validDrops.push(\n      dropzone.dropCheck(dragEvent, pointerEvent, draggable, dragElement, dropzoneElement, rect)\n        ? dropzoneElement\n        : null,\n    )\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = domUtils.indexOfDeepestElement(validDrops)\n\n  return dropState.activeDrops[dropIndex] || null\n}\n\nfunction getDropEvents (interaction: Interaction, _pointerEvent, dragEvent: DragEvent) {\n  const { dropState } = interaction\n  const dropEvents = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null,\n  }\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropState, dragEvent, 'dropactivate')\n\n    dropEvents.activate.target = null\n    dropEvents.activate.dropzone = null\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropState, dragEvent, 'dropdeactivate')\n\n    dropEvents.deactivate.target = null\n    dropEvents.deactivate.dropzone = null\n  }\n\n  if (dropState.rejected) {\n    return dropEvents\n  }\n\n  if (dropState.cur.element !== dropState.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropState.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropState, dragEvent, 'dragleave')\n\n      dragEvent.dragLeave = dropEvents.leave.target = dropState.prev.element\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropState.prev.dropzone\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropState.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropState, dragEvent, 'dragenter')\n\n      dragEvent.dragEnter = dropState.cur.element\n      dragEvent.dropzone = dropState.cur.dropzone\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropState.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropState, dragEvent, 'drop')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n    dragEvent.relatedTarget = dropState.cur.element\n  }\n  if (dragEvent.type === 'dragmove' && dropState.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropState, dragEvent, 'dropmove')\n\n    dropEvents.move.dragmove = dragEvent\n    dragEvent.dropzone = dropState.cur.dropzone\n  }\n\n  return dropEvents\n}\n\ntype FiredDropEvents = Partial<\nRecord<'leave' | 'enter' | 'move' | 'drop' | 'activate' | 'deactivate', DropEvent>\n>\n\nfunction fireDropEvents (interaction: Interaction, events: FiredDropEvents) {\n  const { dropState } = interaction\n  const { activeDrops, cur, prev } = dropState\n\n  if (events.leave) {\n    prev.dropzone.fire(events.leave)\n  }\n  if (events.enter) {\n    cur.dropzone.fire(events.enter)\n  }\n  if (events.move) {\n    cur.dropzone.fire(events.move)\n  }\n  if (events.drop) {\n    cur.dropzone.fire(events.drop)\n  }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate)\n  }\n\n  dropState.prev.dropzone = cur.dropzone\n  dropState.prev.element = cur.element\n}\n\nfunction onEventCreated ({ interaction, iEvent, event }: DoPhaseArg<'drag', EventPhase>, scope: Scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return\n  }\n\n  const { dropState } = interaction\n\n  if (scope.dynamicDrop) {\n    dropState.activeDrops = getActiveDrops(scope, interaction.element)\n  }\n\n  const dragEvent = iEvent\n  const dropResult = getDrop(interaction, dragEvent, event)\n\n  // update rejected status\n  dropState.rejected =\n    dropState.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropState.cur.dropzone &&\n    dropResult.element === dropState.cur.element\n\n  dropState.cur.dropzone = dropResult && dropResult.dropzone\n  dropState.cur.element = dropResult && dropResult.element\n\n  dropState.events = getDropEvents(interaction, event, dragEvent)\n}\n\nfunction dropzoneMethod(interactable: Interactable): DropzoneOptions\nfunction dropzoneMethod(interactable: Interactable, options: DropzoneOptions | boolean): Interactable\nfunction dropzoneMethod (interactable: Interactable, options?: DropzoneOptions | boolean) {\n  if (is.object(options)) {\n    interactable.options.drop.enabled = options.enabled !== false\n\n    if (options.listeners) {\n      const normalized = normalizeListeners(options.listeners)\n      // rename 'drop' to '' as it will be prefixed with 'drop'\n      const corrected = Object.keys(normalized).reduce((acc, type) => {\n        const correctedType = /^(enter|leave)/.test(type)\n          ? `drag${type}`\n          : /^(activate|deactivate|move)/.test(type)\n            ? `drop${type}`\n            : type\n\n        acc[correctedType] = normalized[type]\n\n        return acc\n      }, {})\n\n      interactable.off(interactable.options.drop.listeners)\n      interactable.on(corrected)\n      interactable.options.drop.listeners = corrected\n    }\n\n    if (is.func(options.ondrop)) {\n      interactable.on('drop', options.ondrop)\n    }\n    if (is.func(options.ondropactivate)) {\n      interactable.on('dropactivate', options.ondropactivate)\n    }\n    if (is.func(options.ondropdeactivate)) {\n      interactable.on('dropdeactivate', options.ondropdeactivate)\n    }\n    if (is.func(options.ondragenter)) {\n      interactable.on('dragenter', options.ondragenter)\n    }\n    if (is.func(options.ondragleave)) {\n      interactable.on('dragleave', options.ondragleave)\n    }\n    if (is.func(options.ondropmove)) {\n      interactable.on('dropmove', options.ondropmove)\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap as string)) {\n      interactable.options.drop.overlap = options.overlap\n    } else if (is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0)\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker\n    }\n\n    return interactable\n  }\n\n  if (is.bool(options)) {\n    interactable.options.drop.enabled = options\n\n    return interactable\n  }\n\n  return interactable.options.drop\n}\n\nfunction dropCheckMethod (\n  interactable: Interactable,\n  dragEvent: InteractEvent,\n  event: PointerEventType,\n  draggable: Interactable,\n  draggableElement: Element,\n  dropElement: Element,\n  rect: any,\n) {\n  let dropped = false\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return interactable.options.drop.checker\n      ? interactable.options.drop.checker(\n        dragEvent,\n        event,\n        dropped,\n        interactable,\n        dropElement,\n        draggable,\n        draggableElement,\n      )\n      : false\n  }\n\n  const dropOverlap = interactable.options.drop.overlap\n\n  if (dropOverlap === 'pointer') {\n    const origin = getOriginXY(draggable, draggableElement, 'drag')\n    const page = pointerUtils.getPageXY(dragEvent)\n\n    page.x += origin.x\n    page.y += origin.y\n\n    const horizontal = page.x > rect.left && page.x < rect.right\n    const vertical = page.y > rect.top && page.y < rect.bottom\n\n    dropped = horizontal && vertical\n  }\n\n  const dragRect = draggable.getRect(draggableElement)\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width / 2\n    const cy = dragRect.top + dragRect.height / 2\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom\n  }\n\n  if (dragRect && is.number(dropOverlap)) {\n    const overlapArea =\n      Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) *\n      Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top))\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height)\n\n    dropped = overlapRatio >= dropOverlap\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(\n      dragEvent,\n      event,\n      dropped,\n      interactable,\n      dropElement,\n      draggable,\n      draggableElement,\n    )\n  }\n\n  return dropped\n}\n\nconst drop: Plugin = {\n  id: 'actions/drop',\n  install,\n  listeners: {\n    'interactions:before-action-start': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      interaction.dropState = {\n        cur: {\n          dropzone: null,\n          element: null,\n        },\n        prev: {\n          dropzone: null,\n          element: null,\n        },\n        rejected: null,\n        events: null,\n        activeDrops: [],\n      }\n    },\n\n    'interactions:after-action-start': (\n      { interaction, event, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      // reset active dropzones\n      dropState.activeDrops = null\n      dropState.events = null\n      dropState.activeDrops = getActiveDrops(scope, interaction.element)\n      dropState.events = getDropEvents(interaction, event, dragEvent)\n\n      if (dropState.events.activate) {\n        fireActivationEvents(dropState.activeDrops, dropState.events.activate)\n        scope.fire('actions/drop:start', { interaction, dragEvent })\n      }\n    },\n\n    'interactions:action-move': onEventCreated,\n\n    'interactions:after-action-move': (\n      { interaction, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      fireDropEvents(interaction, interaction.dropState.events)\n\n      scope.fire('actions/drop:move', { interaction, dragEvent })\n      interaction.dropState.events = {}\n    },\n\n    'interactions:action-end': (arg: DoPhaseArg<'drag', EventPhase>, scope) => {\n      if (arg.interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { interaction, iEvent: dragEvent } = arg\n\n      onEventCreated(arg, scope)\n      fireDropEvents(interaction, interaction.dropState.events)\n      scope.fire('actions/drop:end', { interaction, dragEvent })\n    },\n\n    'interactions:stop': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      if (dropState) {\n        dropState.activeDrops = null\n        dropState.events = null\n        dropState.cur.dropzone = null\n        dropState.cur.element = null\n        dropState.prev.dropzone = null\n        dropState.prev.element = null\n        dropState.rejected = false\n      }\n    },\n  },\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n  defaults: {\n    enabled: false,\n    accept: null,\n    overlap: 'pointer',\n  } as DropzoneOptions,\n}\n\nexport default drop\n"
	]
}